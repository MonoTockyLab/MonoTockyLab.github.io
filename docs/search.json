[{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/Introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Introduction to Tocky and Data Preprocessing Methods","text":"vignette introduces concept Tocky. Tocky short “Timer--cell-kinetics--activity,” inspired Japanese word “toki,” meaning “time.” serves comprehensive toolkit integrates experimental computational approaches analyze temporal dynamics cell differentiation activation vivo.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/Introduction.html","id":"the-use-of-fluorescent-timer-protein-for-investigating-cellular-dynamics","dir":"Articles","previous_headings":"2. Principles of Tocky","what":"2-1. The Use of Fluorescent Timer Protein for Investigating Cellular Dynamics","title":"Introduction to Tocky and Data Preprocessing Methods","text":"concept Tocky technology conceived created Dr. Masahiro Ono. measure time-dependent processes individual T cells vivo, Dr. Ono envisioned using substance capable encoding time information known kinetics. screening experiments, mCherry mutant, Fluorescent Timer protein Fast-FT, originally developed Verkhusha group Einstein (Subach et al. (2009)), emerged ideal candidate, particularly compatibility flow cytometry. Leveraging feature, Ono lab developed new Fluorescent Timer reporter transgenic mouse strains analyzing T cell activities differentiation vivo. new transgenic strains include Nr4a3 Fluorescent Timer reporter mice Nr4a3 gene, downstream T cell receptor signaling, Foxp3 gene, specific regulatory T cells. effectively analyze data generated Tocky mice, Dr. Ono developed data analytic concepts dedicated Fluorescent Timer data, using Trigonometric Transformation method analyzing Fluorescent Timer data, reported 2018 (Bending et al., 2018). Consequently, novel Fluorescent Timer systems analysis temporal changes molecular cellular activities designated Nr4a3-Tocky Foxp3-Tocky.  Fluorescent Timer protein undergoes spontaneous irreversible transition emission spectrum, shifting blue red fluorescence post-translation. experimental measurements fluorescence revealed half-life Timer Blue fluorescence approximately 4 hours, whereas half-life Timer Red fluorescence extends 120 hours (Bending et al., 2018).","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/Introduction.html","id":"tocky-data-transformation","dir":"Articles","previous_headings":"2. Principles of Tocky","what":"2-2. Tocky Data Transformation","title":"Introduction to Tocky and Data Preprocessing Methods","text":"primary objective Tocky approach analyze time-related information captured profiles Timer-Blue Timer-Red fluorescence data individual cell level. optimally utilize temporal information single-cell analysis, introduced novel concept along appropriate algorithms. tools designed normalize transform Timer fluorescence data two key metrics: Timer Angle Timer Intensity. Timer Angle defined angle (degrees, ranging 0 90) measured Timer-Blue axis towards Timer-Red axis. Timer Intensity represents distance (norm) cell origin (Timer-Blue = Timer-Red = 0). Normalized trigonometric-transformed Timer fluorescence data offer opportunities analyze real-time transcriptional activities cumulative (historical) activities observed days leading experimental analysis cells, demonstrated previous reports (Bending, Martı́n, et al. (2018); Bending, Paduraru, et al. (2018)).","code":""},{"path":[]},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"tockyprep-standardizing-the-analysis-of-fluorescent-timer-proteins-in-flow-cytometry","dir":"Articles","previous_headings":"Introduction","what":"TockyPrep: Standardizing the Analysis of Fluorescent Timer Proteins in Flow Cytometry","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"Fluorescent Timer proteins uniquely change emission spectra time serve powerful tools monitoring dynamic processes within cells. proteins crucial understanding intricate temporal dynamics cellular events. Despite potential, analysis Timer fluorescence data flow cytometry often complicated variability instrument settings absence standardized data preprocessing methods. overcome challenges, TockyPrep package developed. R package provides comprehensive suite tools designed automate preprocessing, normalization, trigonometric transformation Timer fluorescence data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"aim","dir":"Articles","previous_headings":"Introduction","what":"Aim","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"TockyPrep package aims standardize analysis Timer fluorescence improve reproducibility accuracy across various experimental setups. specifically addresses normalization immature mature Timer fluorescence critical step robust analysis. approach central understanding maturation dynamics Timer proteins, implemented using advanced trigonometric transformations.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"getting-started-with-tockyprep","dir":"Articles","previous_headings":"","what":"Getting Started with TockyPrep","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"begin using TockyPrep, install package GitHub using following command: installed, can load package follow vignette’s sample workflow process flow cytometry data. vignette guide importing data, applying preprocessing steps, visualizing results ensure can fully leverage capabilities TockyPrep toolkit.","code":"# Install TockyPrep from GitHub devtools::install_github(\"MonoTockyLab/TockyPrep\")"},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"sample-workflow","dir":"Articles","previous_headings":"","what":"Sample Workflow","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"section walk typical analysis workflow using TockyPrep process flow cytometric data cells expressing Fluorescent Timer proteins. cover data import, application preprocessing methods, basic visualization techniques.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"set-up-and-prep_tocky","dir":"Articles","previous_headings":"Sample Workflow","what":"Set-up and prep_tocky","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"start TockyPrep analysis, load library. use example files included TockyPrep package. access files, run following codes, defines sample files negative control file used. define files analyzed using function prep_tocky.","code":"library(TockyPrep) # Example data load # Define the base path file_path <- system.file(\"extdata\", package = \"TockyPrep\")  # Define files negfile <- \"Timer_negative.csv\" samplefiles <- list.files(file_path, pattern = \"sample_\", full.names = FALSE) samplefiles <- setdiff(samplefiles, file.path(file_path, negfile))   print(negfile) ## [1] \"Timer_negative.csv\" head(samplefiles) ## [1] \"sample_0hrs_R1.csv\"  \"sample_0hrs_R2.csv\"  \"sample_0hrs_R3.csv\"  ## [4] \"sample_12hrs_R1.csv\" \"sample_12hrs_R2.csv\" \"sample_12hrs_R3.csv\" # Preprocessing data prep <- prep_tocky(path = file_path, samplefile = samplefiles, negfile = negfile, interactive = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"data-preprocessing-by-timer_transform","dir":"Articles","previous_headings":"Sample Workflow","what":"Data preprocessing by timer_transform","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"Now ready apply data preprocessing methods sample data. timer_transform steps, including data import, Timer thresholding, Timer fluorescence normalization, Trigonometric transformation obtain Timer Angle Intensity values individual cells.","code":"# Normalizing and transforming data transformed_data <- timer_transform(prep, blue_channel = 'Timer.Blue', red_channel = 'Timer.Red', select = FALSE, verbose = FALSE)"},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"preparation-sample-grouping-definition","dir":"Articles","previous_headings":"Sample Workflow > Visualization","what":"Preparation: sample grouping definition","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"effectively visualize processed data, sample grouping needs defined using sample_definition. example file sampledefinition.csv provides standard form. Use data.frame input sample_definition. Alternatively, sample grouping can created choosing interaction session using option interactive = TRUE. prompt generation sample_definition.csv output directory.","code":"sample_definition <- read.csv(file.path(file_path, 'sampledefinition.csv')) sample_definition <- as.data.frame(sample_definition) head(sample_definition) ##                  file group ## 1  sample_0hrs_R1.csv     0 ## 2  sample_0hrs_R2.csv     0 ## 3  sample_0hrs_R3.csv     0 ## 4 sample_12hrs_R1.csv    12 ## 5 sample_12hrs_R2.csv    12 ## 6 sample_12hrs_R3.csv    12 # Normalizing and transforming data  transformed_data <- sample_definition(transformed_data, sample_definition = sample_definition, interactive = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"confirming-the-gating-of-timer-fluorescence","dir":"Articles","previous_headings":"Sample Workflow > Visualization","what":"Confirming the gating of Timer fluorescence","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"visualize thereshold values Timer blue red fluorescence, use plot_timer_gating. Figure 1: Thereshold values set Timer blue red fluorescence.","code":"plot_timer_gating(prep = prep, x = transformed_data) ## [1] \"FSC.A\"      \"Timer.Blue\" \"Timer.Red\" ## Percentage of cells in each quadrant: ## Q1: 0.2029% ## Q2: 0% ## Q3: 0.2029% ## Q4: 99.5941%"},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"visualization-of-the-processed-timer-data","dir":"Articles","previous_headings":"Sample Workflow > Visualization","what":"Visualization of the processed Timer data","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"visualize processed Timer data, use plot_tocky. versatile function, enabling three plot modes, including 'Timer fluorescence', 'Normalized Timer fluorescence', 'Timer Angle Intensity'. 'Timer fluorescence': Timer blue red fluorescence, without normalization. 'Normalized Timer fluorescence': Normalized thrsholded Timer blue red fluorescence. 'Timer Angle Intensity': Timer Angle Intensity trigonometric transformation.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"non-normalized-timer-fluorescence-figure-2","dir":"Articles","previous_headings":"Sample Workflow > Visualization","what":"Non-normalized Timer fluorescence (Figure 2)","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"default 'Timer fluorescence', non-normalized Timer fluorescence. Figure 2: Non-normalized Timer Fluorescence T cells stimulated antigen analyzed 4, 8, 12, 16 hours activation.","code":"logic <- sample_definition$group %in% c(4, 8, 12, 16) samplefiles <- sample_definition$file[logic] show(samplefiles) ##  [1] \"sample_12hrs_R1.csv\" \"sample_12hrs_R2.csv\" \"sample_12hrs_R3.csv\" ##  [4] \"sample_16hrs_R1.csv\" \"sample_16hrs_R2.csv\" \"sample_16hrs_R3.csv\" ##  [7] \"sample_4hrs_R1.csv\"  \"sample_4hrs_R2.csv\"  \"sample_4hrs_R3.csv\"  ## [10] \"sample_8hrs_R1.csv\"  \"sample_8hrs_R2.csv\"  \"sample_8hrs_R3.csv\" # Visualizing the results plot_tocky(transformed_data, interactive = FALSE, save = FALSE, n = 2, samplefile = samplefiles, verbose = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"normalized-timer-fluorescence-figure-3","dir":"Articles","previous_headings":"Sample Workflow > Visualization","what":"Normalized Timer fluorescence (Figure 3)","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"Using option plot_mode = \"Normalized Timer fluorescence\", can visualize Normalized Timer blue red fluorescence. Figure 3: Normalized Timer Fluorescence T cells stimulated antigen analyzed 4, 8, 12, 16 hours activation.","code":"# Visualizing the results plot_tocky(transformed_data, plot_mode = \"Normalized Timer fluorescence\", interactive = FALSE, save = FALSE, n = 2, samplefile = samplefiles, verbose = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"timer-angle-and-intensity-figure-3","dir":"Articles","previous_headings":"Sample Workflow > Visualization","what":"Timer Angle and Intensity (Figure 3)","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"Using option plot_mode = \"Timer Angle Intensity\", can visualize effects trigonometric transformation applied normalized data. Figure 3: Timer Angle Timer Intensity T cells stimulated antigen analyzed 4, 8, 12, 16 hours activation.","code":"# Visualizing the results plot_tocky(transformed_data, plot_mode = \"Timer Angle and Intensity\", interactive = FALSE, save = FALSE, n = 2, samplefile = samplefiles, verbose = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/articles/TockyDataPreprocessing.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis","text":"TockyPrep provides comprehensive suite data preprocessing methods deriving Timer Angle Timer Intensity data. suite includes Timer thresholding, Timer normalization, trigonometric transformation. resulting Timer Angle Intensity data can robustly used downstream analyses. Please explore downstream analysis examples Bending, Martı́n, et al. (2018); Bending, Paduraru, et al. (2018); Hassan et al. (2022).","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyPrep/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Masahiro Ono. Author, maintainer.           0000-0002-9284-7326","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Masahiro Ono (2024). TockyPrep: Data Preprocessing Methods Flow Cytometric  Fluorescent Timer Analysis. arXiv preprint arXiv:2411.04111 [q-bio.QM]. Available : https://arxiv.org/abs/2411.04111","code":"@Manual{,   title = {TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis},   author = {Masahiro Ono},   year = {2024},   note = {arXiv preprint arXiv:2411.04111 [q-bio.QM]},   url = {https://arxiv.org/abs/2411.04111}, }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"tockyprep-data-preprocessing-methods-for-fluorescent-timer-reporter-data","dir":"","previous_headings":"","what":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"Author: Dr. Masahiro OnoDate: 6 November 2024","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"the-potential-of-fluorescent-timer-proteins","dir":"","previous_headings":"Introduction - The R Package for Fluorescent Timer Data Analysis","what":"The potential of Fluorescent Timer proteins","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"Fluorescent Timer proteins uniquely alter emission spectra time, making powerful tools monitoring dynamic cellular processes. proteins pivotal understanding intricate temporal dynamics cellular events. Despite potential, analyzing Timer fluorescence data flow cytometry often hampered variability instrument settings lack standardized data preprocessing methods.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"a-breakthrough-in-fluorescent-timer-analysis","dir":"","previous_headings":"Introduction - The R Package for Fluorescent Timer Data Analysis","what":"A Breakthrough in Fluorescent Timer Analysis","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"significant advancement made 2018 Ono lab introduced Tocky, novel concept analyzing Fluorescent Timer data. approach encompasses data normalization transformation methods (see Introduction TockyPrep Package). However, computational implementation methodology yet available.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"aim-of-the-tockyprep-package","dir":"","previous_headings":"Introduction - The R Package for Fluorescent Timer Data Analysis","what":"Aim of the TockyPrep Package","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"address challenges, TockyPrep package developed. R package provides comprehensive suite tools designed automate preprocessing, normalization, trigonometric transformation Timer fluorescence data, facilitating accurate reproducible analyses. TockyPrep package aims standardize analysis Timer fluorescence improve reproducibility accuracy across various experimental setups. specifically addresses normalization immature mature Timer fluorescence critical step robust analysis. approach central understanding maturation dynamics Timer proteins, implemented using advanced trigonometric transformations.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"the-tockyprep-r-package","dir":"","previous_headings":"","what":"The TockyPrep R Package","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"TockyPrep R package provides data preprocessing methods Fluorescent Timer data analyzing temporal dynamics cellular activities using flow cytometry.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"key-features-of-tockyprep","dir":"","previous_headings":"The TockyPrep R Package","what":"Key Features of TockyPrep","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"Specifically, TockyPrep package provides essential data preprocessing methods analyzing Fluorescent Timer data: feature corrects instrumental biases may affect fluorescence readings, ensuring measurements Timer Blue Timer Red fluorescence accurate comparable across different experimental setups. normalization crucial accurate assessment maturation state Timer protein, adjusts variability signal intensity different cells samples. enhance reliability Timer data analysis, method filters background noise setting thresholds distinguish Timer-positive Timer-negative cells. vital focusing analysis cells express Timer protein, thereby eliminating data points distort interpretation temporal dynamics. transformation computes two new metrics, Timer Angle Timer Intensity, normalized fluorescence data. metrics pivotal quantifying dynamics Timer protein maturation within cells, providing insights timing progression cellular events. TockyPrep aids organizing labeling flow cytometry data files streamlined analysis. automates identification sample groups control samples, facilitating efficient subsequent data analyses. package includes functions visualize raw transformed Timer fluorescence data. tools allow users generate plots illustrate distribution Timer fluorescence within samples track transformation results, plotting Timer Angle versus Timer Intensity. visualizations crucial preliminary data assessment, enabling researchers quickly identify trends anomalies warrant investigation.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"availability","dir":"","previous_headings":"The TockyPrep R Package","what":"Availability","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"TockyPrep freely available distribution via GitHub: Link repository: TockyPrep GitHub","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"getting-started-with-tockyprep","dir":"","previous_headings":"","what":"Getting Started with TockyPrep","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"begin using TockyPrep, install package GitHub using following command:","code":"# Install TockyPrep from GitHub devtools::install_github(\"MonoTockyLab/TockyPrep\")"},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"id_4-package-documentation","dir":"","previous_headings":"","what":"4. Package Documentation","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"TockyPrep package documentation available online: Website: https://MonoTockyLab.github.io/TockyPrep/ site includes function reference manuals vignettes (tutorials). addition HTML manual pages, PDF manual TockyPrep package available. can find installed package directory doc/, can access directly GitHub.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"copyright","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"Copyright","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"code original graphical content within TockyPrep package, including anime-like characters logos, copyrighted Masahiro Ono.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"license","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"License","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"distribution modification governed Apache License 2.0, ensures users freedom use change software way respects original authorship. See LICENSE file information.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"citing-tockyprep","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines","what":"Citing TockyPrep","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"use TockyPrep research, please cite: Masahiro Ono (2024). TockyPrep: Data Preprocessing Methods Flow Cytometric Fluorescent Timer Analysis. arXiv:2411.04111 [q-bio.QM]. Available :https://arxiv.org/abs/2411.04111.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"bibtex-entry","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing TockyPrep","what":"BibTeX Entry","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"","code":"@article{ono2024TockyPrep,     title={TockyPrep: Data Preprocessing Methods for Flow Cytometric Fluorescent Timer Analysis},     author={Masahiro Ono},     year={2024},     journal={arXiv:2411.04111 [q-bio.QM]},     url={https://arxiv.org/abs/2411.04111}, }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"why-citation-is-important","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing TockyPrep","what":"Why Citation Is Important","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"Citing software ’ve used crucial acknowledging contributions ensuring reproducibility, critical scientific progress. Giving credit developers researchers contributed tools utilize respects acknowledges intellectual contributions. Proper citations allow researchers access tools versions, thus replicating verifying scientific results. Citations integral scientific ecosystem; help trace evolution ideas enable others build upon existing research. kindly remind users citing software important citing academic articles maintaining integrity scientific record.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"further-resources","dir":"","previous_headings":"5. Copyright, License, and Citation Guidelines > Citing TockyPrep","what":"Further Resources","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"additional guidance citation practices maintaining research integrity, recommend visiting Committee Publication Ethics (COPE), offers valuable resources support adhering ethical practices scholarly publishing.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"id_6-the-ono-lab-monotockylab","dir":"","previous_headings":"","what":"6. The Ono Lab (MonoTockyLab)","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"Masahiro Ono Lab (MonoTockyLab) offers innovative approaches analyzing omics flow cytometric data. lab particularly well-known development Timer--cell-kinetics--Activity (Tocky) integrated analysis immunological data using experiments computational analysis. Principal Investigator: Dr. Masahiro Ono, Reader Immunology Imperial College London. Dr. Ono creator developer Tocky. innovated transgenic computational technologies constitute Tocky. 2008, Dr. Ono initiated pioneering transition molecular immunology becoming Integrated Experimental Computational Immunologist, demonstrating visionary leadership pioneering spirit development application multidimensional analysis computational methods address experimental immunological problems. Tocky represents one fusion technologies Dr. Ono created developed. Tocky employs Fluorescent Timer protein analyze temporal dynamics cell activities development vivo. lab integrates molecular biology, immunology, computational analysis develop novel research tools, thereby enhancing understanding immune cell biology.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/index.html","id":"id_7-contact-and-more","dir":"","previous_headings":"","what":"7. Contact and More","title":"Data Preprocessing for Fluorescent Timer Reporters Using the Timer-Of-Cell-Kinetics-of-activitY (Tocky)","text":"Email:  Personal Homepage: GitHub: Twitter: BlueSky: Professional Homepage: Imperial College London - Masahiro Ono","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/LogSingleData.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmic Transformation of Fluorescence Data — LogSingleData","title":"Logarithmic Transformation of Fluorescence Data — LogSingleData","text":"Applies custom logarithmic transformation fluorescence intensity data, transforming values greater 1 using base-10 logarithm setting values less equal 1 zero.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/LogSingleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmic Transformation of Fluorescence Data — LogSingleData","text":"","code":"LogSingleData(x)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/LogSingleData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmic Transformation of Fluorescence Data — LogSingleData","text":"x numeric vector fluorescence intensity values transformed.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/LogSingleData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithmic Transformation of Fluorescence Data — LogSingleData","text":"numeric vector containing transformed fluorescence intensity values.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/LogSingleData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Logarithmic Transformation of Fluorescence Data — LogSingleData","text":"function used internally transform fluorescence intensity data. ensures non-positive values (log-transformed) set zero, positive values greater 1 log-transformed using base 10. helps handling data wide range values avoids issues undefined logarithms.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/LogSingleData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logarithmic Transformation of Fluorescence Data — LogSingleData","text":"","code":"# Example usage: fluorescence_values <- c(0.5, 1, 2, 10) transformed_values <- LogSingleData(fluorescence_values) #> Error in LogSingleData(fluorescence_values): could not find function \"LogSingleData\" # transformed_values will be: c(0, 0, log10(2), log10(10))"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/TockyPrepData-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A class representing a TockyPrepData object for output of timer_transform — TockyPrepData-class","title":"A class representing a TockyPrepData object for output of timer_transform — TockyPrepData-class","text":"class designed encapsulate structure output timer_transform function TockyPrep package.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/TockyPrepData-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A class representing a TockyPrepData object for output of timer_transform — TockyPrepData-class","text":"Data data.frame containing expression data. cell_counts data.frame containing counts cells per sample. sampledef list including annotation data sample grouping. timer_fluorescence list containing channel names fluorescence timer data. input list parameters used creating TockyPrepData object. normalization_parameters list parameters used data normalization. Tocky list containing Tocky-specific analysis data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/initialize-TockyPrepData-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a TockyPrepData object — initialize,TockyPrepData-method","title":"Initialize a TockyPrepData object — initialize,TockyPrepData-method","text":"method initializes TockyPrepData specific data flow cytometry analysis. ensures specific slots set .","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/initialize-TockyPrepData-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a TockyPrepData object — initialize,TockyPrepData-method","text":"","code":"# S4 method for class 'TockyPrepData' initialize(   .Object,   Data = data.frame(),   cell_counts = data.frame(),   sampledef = list(),   timer_fluorescence = list(),   input = list(),   normalization_parameters = list(),   Tocky = list() )"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/initialize-TockyPrepData-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a TockyPrepData object — initialize,TockyPrepData-method","text":".Object TockyPrepData object initialized. Data data.frame containing expression data. cell_counts data.frame containing counts cells per sample. sampledef list including annotation data sample grouping. timer_fluorescence list containing channel names fluorescence timer data. input list parameters used creating TockyPrepData object. normalization_parameters list parameters used data normalization. Tocky list containing Tocky-specific analysis data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/initialize-TockyPrepData-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a TockyPrepData object — initialize,TockyPrepData-method","text":"valid TockyPrepData initialized provided data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/logic_to_Percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Logical Vector to Percentage — logic_to_Percent","title":"Convert Logical Vector to Percentage — logic_to_Percent","text":"Calculates percentage TRUE values logical vector, excluding NA values.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/logic_to_Percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Logical Vector to Percentage — logic_to_Percent","text":"","code":"logic_to_Percent(logical_vector)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/logic_to_Percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Logical Vector to Percentage — logic_to_Percent","text":"logical_vector logical vector TRUE represents condition met (e.g., cell falling within certain quadrant).","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/logic_to_Percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Logical Vector to Percentage — logic_to_Percent","text":"numeric value representing percentage TRUE values vector.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/logic_to_Percent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Logical Vector to Percentage — logic_to_Percent","text":"function used internally calculate percentage data points meet specific condition, within specific gating quadrant. excludes NA values calculation ensure accuracy.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/logic_to_Percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Logical Vector to Percentage — logic_to_Percent","text":"","code":"if (FALSE) { # \\dontrun{   logical_vector <- c(TRUE, FALSE, NA, TRUE, FALSE, TRUE)   percent_true <- logic_to_Percent(logical_vector)   # percent_true will output 50 (3 TRUE out of 6 total, with 1 NA excluded) } # }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_timer_gating.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Timer Gating Confirmation — plot_timer_gating","title":"Plot Timer Gating Confirmation — plot_timer_gating","text":"Generates plot negative control data gating thresholds overlaid, allowing visual confirmation gating parameters used timer transformation process.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_timer_gating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Timer Gating Confirmation — plot_timer_gating","text":"","code":"plot_timer_gating(prep, x)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_timer_gating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Timer Gating Confirmation — plot_timer_gating","text":"prep list containing file paths variables, typically output prep_tocky. must include: neg: Character string specifying negative control file name. path: Character string specifying directory path data files. x TockyPrepData object resulting timer_transform, containing processed data normalization parameters, including gating thresholds.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_timer_gating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Timer Gating Confirmation — plot_timer_gating","text":"function generates plot; return value.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_timer_gating.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Timer Gating Confirmation — plot_timer_gating","text":"function reads negative control data specified prep, applies logarithmic transformation Timer Red Timer Blue fluorescence channels, plots Red_log versus Blue_log values. gating thresholds extracted TockyPrepData object x overlaid plot vertical horizontal lines. allows users visually confirm gating thresholds applied data normalization process.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_timer_gating.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Timer Gating Confirmation — plot_timer_gating","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'prep_data' is the output from 'prep_tocky' and 'tocky_data' is the TockyPrepData object plot_timer_gating(prep = prep_data, x = tocky_data) } # }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_tocky.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate basic QC plots for Tocky data — plot_tocky","title":"Generate basic QC plots for Tocky data — plot_tocky","text":"function visualizes either Timer fluorescence (Blue vs Red) Timer dynamics Tocky method (Angle vs Intensity) based specified mode.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_tocky.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate basic QC plots for Tocky data — plot_tocky","text":"","code":"plot_tocky(   x,   file = \"PlotTocky\",   pseudocolour = TRUE,   pdf = FALSE,   output = \"QC\",   n = 4,   plot_mode = \"Timer fluorescence\",   lower_quantile_cutoff = 0.01,   select = FALSE,   use_group = TRUE,   group_order = NULL,   interactive = TRUE,   save = FALSE,   samplefile = NULL,   verbose = TRUE )"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_tocky.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate basic QC plots for Tocky data — plot_tocky","text":"x TockyPrepData object returned `timer_transform`, sample grouping defined `sample_definition`. file File name. pseudocolour logical argument whether use pseudocolour plots. pdf logical argument; FALSE, jpeg file generated instead. output output directory name output files. n number; n x n plots generated output Tocky plot file, max 4 16 plots. plot_mode Either \"Timer fluorescence\" Blue vs Red plots, \"Normalized Timer fluorescence\" normalized plots, \"Timer Angle Intensity\" Angle vs Intensity plots. lower_quantile_cutoff Lower quantile cutoff setting plot ranges fluorescence mode. select Logical indicating whether manually select samples plotting. use_group Logical indicating whether group plots based `group` field `sampledef`. group_order Optional character vector specifying order panels using group option. interactive Logical indicating whether prompt user select plot_mode. Defaults `TRUE`. save logical argument; FALSE, plots shown X window. samplefile Character vector specifying sample files. Defaults `NULL`. verbose Logical indicating whether print progress messages. Default `TRUE`.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/plot_tocky.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate basic QC plots for Tocky data — plot_tocky","text":"","code":"if (FALSE) { # \\dontrun{   plot_tocky(x, plot_mode = \"Timer fluorescence\")   plot_tocky(x, plot_mode = \"Timer Angle and Intensity\") } # }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/prep_tocky.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data for Timer Transformation Using Flow Cytometric Data — prep_tocky","title":"Prepare Data for Timer Transformation Using Flow Cytometric Data — prep_tocky","text":"function prepares dataset timer transformation analysis identifying common variables across sample files, configuring necessary control files, setting variables downstream analysis. function supports interactive non-interactive file selection modes.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/prep_tocky.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data for Timer Transformation Using Flow Cytometric Data — prep_tocky","text":"","code":"prep_tocky(path = \".\", interactive = TRUE, negfile = NULL, samplefile = NULL)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/prep_tocky.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data for Timer Transformation Using Flow Cytometric Data — prep_tocky","text":"path Character string specifying directory data files located. Defaults current directory `'.'`. interactive Logical indicating whether prompt user select sample files. Defaults `TRUE`. negfile Character string specifying negative control file. `NULL`, user prompted select file. Defaults `NULL`. samplefile Character vector specifying sample files. `NULL` `samplefilechoice` `TRUE`, user prompted select files. Defaults `NULL`.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/prep_tocky.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data for Timer Transformation Using Flow Cytometric Data — prep_tocky","text":"list containing paths control file, selected sample files, standardized   variables used analysis.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/prep_tocky.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Data for Timer Transformation Using Flow Cytometric Data — prep_tocky","text":"","code":"if (FALSE) { # \\dontrun{   # Interactive file selection   prep_data <- prep_tocky(path='data', output='output')    # Specifying files directly for non-interactive usage   prep_data <- prep_tocky(     path='data',     output='output',     negfile='neg_control.csv',     samplefile=c('sample1.csv', 'sample2.csv')   ) } # }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/quadrant_gate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Quadrant Gating Logic — quadrant_gate","title":"Calculate Quadrant Gating Logic — quadrant_gate","text":"Determines quadrant point dataset falls based specified x y thresholds.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/quadrant_gate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Quadrant Gating Logic — quadrant_gate","text":"","code":"quadrant_gate(df, x_point, y_point, var_x_name, var_y_name)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/quadrant_gate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Quadrant Gating Logic — quadrant_gate","text":"df data frame containing fluorescence data. x_point numeric threshold x-axis (e.g., Red fluorescence). y_point numeric threshold y-axis (e.g., Blue fluorescence). var_x_name name x-axis variable `df`. var_y_name name y-axis variable `df`.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/quadrant_gate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Quadrant Gating Logic — quadrant_gate","text":"list containing logical vectors quadrant: Q1: Points `x_point` equal `y_point`. Q2: Points equal `x_point` equal `y_point`. Q3: Points equal `x_point` `y_point`. Q4: Points `x_point` `y_point`.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/quadrant_gate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Quadrant Gating Logic — quadrant_gate","text":"function intended internal use assist categorizing cells quadrants based fluorescence gating thresholds. helps analysis determining percentage cells within quadrant.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/quadrant_gate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Quadrant Gating Logic — quadrant_gate","text":"","code":"if (FALSE) { # \\dontrun{   df <- data.frame(Red = rnorm(100, 50, 10), Blue = rnorm(100, 50, 10))   quadrant_data <- quadrant_gate(df, x_point = 50, y_point = 50, var_x_name = \"Red\", var_y_name = \"Blue\") } # }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/sample_definition.html","id":null,"dir":"Reference","previous_headings":"","what":"Update sample definitions and group assignments — sample_definition","title":"Update sample definitions and group assignments — sample_definition","text":"function takes output `timer_transform`, specifically `sample_definition` data frame, exports CSV file user edit group assignments, reads updated file back R.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/sample_definition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update sample definitions and group assignments — sample_definition","text":"","code":"sample_definition(   x,   sample_definition = NULL,   output_dir = NULL,   filename = \"sampledef.csv\",   sep = \",\",   verbose = TRUE,   interactive = FALSE )"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/sample_definition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update sample definitions and group assignments — sample_definition","text":"x TockyPrepData object returned `timer_transform`. sample_definition (Optional) use data frame object annotation data sample grouping. Defaul `NULL`. output_dir Character string specifying directory save `sampledef.csv` file. `NULL`, file saved current working directory. Default `NULL`. filename Character string specifying name sample definition file. Default `\"sampledef.csv\"`. sep Character string indicating field separator used CSV file. Default `\",\"`. verbose Logical indicating whether display messages. Default `TRUE`. interactive Logical indicating whether use interactive session export file sample grouping enable user edit import. Defaults `TRUE`.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/sample_definition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update sample definitions and group assignments — sample_definition","text":"updated TockyPrepData user-assigned groupings.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/sample_definition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update sample definitions and group assignments — sample_definition","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming `x` is the output from `timer_transform`   x <- sampledef(x, output_dir = \"output_directory\")   # The function will pause, allowing you to edit the 'group' column in the CSV file.   # After editing and saving the file, press Enter in R to continue.   # The updated sample definitions will be returned as a data frame. } # }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/show-TockyPrepData-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for the TockyPrepData class — show,TockyPrepData-method","title":"Show method for the TockyPrepData class — show,TockyPrepData-method","text":"Displays summary information various slots TockyPrepData object. Includes details total number cells, variable names, sample numbers, group levels, providing concise summary object.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/show-TockyPrepData-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for the TockyPrepData class — show,TockyPrepData-method","text":"","code":"# S4 method for class 'TockyPrepData' show(object)"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/show-TockyPrepData-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for the TockyPrepData class — show,TockyPrepData-method","text":"object object TockyPrepData class","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/timer_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Timer Transformation on Flow Cytometry Data — timer_transform","title":"Perform Timer Transformation on Flow Cytometry Data — timer_transform","text":"function processes flow cytometry data applying Timer thrsholding, normalization, trigonometric transformation Blue Red fluorescence data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/timer_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Timer Transformation on Flow Cytometry Data — timer_transform","text":"","code":"timer_transform(   prep,   select = TRUE,   blue_channel = NULL,   red_channel = NULL,   normalization_method = \"MAD\",   red_threshold = NULL,   blue_threshold = NULL,   interactive_gating = FALSE,   verbose = TRUE,   q = 0.998,   normalization = TRUE )"},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/timer_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Timer Transformation on Flow Cytometry Data — timer_transform","text":"prep list containing file paths variables, typically output prep_tocky. select Logical indicating whether choose Timer fluorescence channels interactively. Default `TRUE`. blue_channel Character string specifying Blue fluorescence channel name. `NULL`, function attempts determine automatically. red_channel Character string specifying Red fluorescence channel name. `NULL`, function attempts determine automatically. normalization_method Charcter string specifying normalization method applied Timer flfuorescence Default `MAD`. alternative `SD`. red_threshold Numeric specifying Red channel gating threshold. `NULL`, gating performed automatically interactively based `interactive_gating`. blue_threshold Numeric specifying Blue channel gating threshold. `NULL`, gating performed automatically interactively based `interactive_gating`. interactive_gating Logical indicating whether perform interactive gating thresholds provided. Default `FALSE`. verbose Logical indicating whether print progress messages. Default `TRUE`. q Quantile value used automatic Timer thresholds. Default 0.998. normalization Logical indicating whether apply Timer fluorescence normalization. Default `TRUE`.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/timer_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Timer Transformation on Flow Cytometry Data — timer_transform","text":"function returns new TockyPrepData object containing: Data: Data frame angle, intensity, variables. normalization_parameters: List normalization values coefficients. cell_counts: Data frame cell counts sample. sampledef: Data frame sample file names placeholder group column.","code":""},{"path":"https://MonoTockyLab.github.io/TockyPrep/reference/timer_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Timer Transformation on Flow Cytometry Data — timer_transform","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming `prep_data` is the output from `prep_tocky`   result <- timer_transform(prep_data) } # }"},{"path":"https://MonoTockyLab.github.io/TockyPrep/news/index.html","id":"changes-in-version-010-2024-11-09","dir":"Changelog","previous_headings":"","what":"Changes in version 0.1.0 (2024-11-09)","title":"Changes in version 0.1.0 (2024-11-09)","text":"Resolved issue NAMESPACE prevented certain functions properly imported. Implemented S4 methods improved object-oriented programming capabilities within package. Updated vignettes reflect latest functionalities usage examples.","code":""}]
